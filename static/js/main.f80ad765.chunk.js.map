{"version":3,"sources":["info/Info.js","App.js","reportWebVitals.js","index.js"],"names":["Info","useState","name","age","gender","nam","setNam","info","setInfo","ind","setInd","status","setStatus","inpt","e","target","value","j","className","type","onChange","placeholder","id","htmlFor","onClick","length","o","map","k","index","a","filter","ele","i","b","d","parseInt","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wMAGe,SAASA,IAEpB,MAAsBC,mBAAS,CAACC,KAAK,GAAKC,IAAI,GAAKC,OAAO,KAA1D,mBAAOC,EAAP,KAAYC,EAAZ,KACA,EAAwBL,mBAAS,IAAjC,mBAAOM,EAAP,KAAaC,EAAb,KACA,EAAsBP,qBAAtB,mBAAOQ,EAAP,KAAYC,EAAZ,KACA,EAA4BT,mBAAS,GAArC,mBAAOU,EAAP,KAAeC,EAAf,KAEMC,EAAO,SAACC,GAEV,MAAyBA,EAAEC,OAAnBb,EAAR,EAAQA,KAAOc,EAAf,EAAeA,MACfV,GAAO,SAACW,GAAD,mBAAC,eAAWA,GAAZ,kBAAiBf,EAAMc,QAclC,OACI,mCACI,sBAAKE,UAAU,YAAf,UAGI,qBAAKA,UAAU,YAAf,SACI,sBAAKA,UAAU,YAAf,UACI,uBAAOC,KAAK,OAAOD,UAAU,aAAaF,MAAOX,EAAIH,KAAMkB,SAAUP,EAAMX,KAAK,OAAOmB,YAAY,SACnG,uBAAOF,KAAK,SAASD,UAAU,aAAaF,MAAOX,EAAIF,IAAKiB,SAAUP,EAAMX,KAAK,MAAMmB,YAAY,QACnG,sBAAKH,UAAU,kBAAf,UACI,gCAAK,uBAAOC,KAAK,QAAQjB,KAAK,SAASkB,SAAUP,EAAMS,GAAG,cAAcN,MAAM,SAAS,uBAAOO,QAAQ,cAAf,sBACvF,gCAAK,uBAAOJ,KAAK,QAAQjB,KAAK,SAASkB,SAAUP,EAAMS,GAAG,gBAAgBN,MAAM,WAAW,uBAAOO,QAAQ,gBAAf,wBAC3F,gCAAK,uBAAOJ,KAAK,QAAQjB,KAAK,SAASkB,SAAUP,EAAMS,GAAG,gBAAgBN,MAAM,WAAW,uBAAOO,QAAQ,gBAAf,2BAE/F,yBAAQC,QAxBhB,WAELjB,EAAKkB,QAAUhB,EAAI,GAClBF,EAAKE,GAAOJ,EACZO,EAAU,IACLJ,GAAQ,SAACkB,GAAD,4BAAWA,GAAX,CAAerB,OAChCC,EAAO,CAACJ,KAAK,GAAKC,IAAI,GAAKC,OAAO,MAkBIc,UAAU,WAAhC,cAAyD,IAAXP,EAAgB,MAAQ,SAAtE,YAKR,qBAAKO,UAAU,YAAf,SACKX,EAAKoB,KAAI,SAACC,EAAIC,GAEX,OACI,8BACI,sBAAKX,UAAU,OAAf,oBACYU,EAAE1B,KADd,mBAEW0B,EAAEzB,IAFb,sBAGcyB,EAAExB,OACZ,wBAAQc,UAAU,MAAMM,QAAU,kBAAMhB,GAAQ,SAAAsB,GAAC,OAAIA,EAAEC,QAAO,SAAEC,EAAMC,GAAR,OAAeJ,IAAQI,SAArF,iBACA,wBAAQf,UAAU,MAAMM,QAAS,WAC7B,IAAMU,EAAI3B,EAAKwB,QAAO,SAACI,EAAIrB,GAAL,OAAWe,IAAQf,KACzCR,EAAO,CAACJ,KAAKgC,EAAE,GAAGhC,KAAOC,IAAIiC,SAASF,EAAE,GAAG/B,KAAOC,OAAO8B,EAAE,GAAG9B,SAC9DM,EAAOmB,GACPjB,EAAU,IAJd,sBANEiB,aCxCvBQ,MARf,WACE,OACE,mCACE,cAACrC,EAAD,OCOSsC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.f80ad765.chunk.js","sourcesContent":["import React , { useState } from 'react';\r\nimport './info.css';\r\n\r\nexport default function Info() {\r\n\r\n    const [nam, setNam] = useState({name:\"\" , age:\"\" , gender:\"\"});\r\n    const [info, setInfo] = useState([]);\r\n    const [ind, setInd] = useState();\r\n    const [status, setStatus] = useState(0)\r\n\r\n    const inpt = (e) => {\r\n\r\n        const { name , value } = e.target;\r\n        setNam((j) => ({...j , [name]:value}));\r\n        \r\n    }\r\n\r\n    const add = () => {\r\n\r\n        if(info.length >= ind+1) {\r\n            info[ind] = nam;\r\n            setStatus(0);\r\n        } else { setInfo((o) => [...o , nam]); }\r\n        setNam({name:\"\" , age:\"\" , gender:\"\"});\r\n        \r\n    }\r\n    \r\n    return (\r\n        <>\r\n            <div className=\"main_wrap\">\r\n\r\n                {/* form component */}\r\n                <div className=\"info_wrap\">\r\n                    <div className=\"info_card\">\r\n                        <input type=\"text\" className=\"info_input\" value={nam.name} onChange={inpt} name=\"name\" placeholder=\"Name\" />\r\n                        <input type=\"number\" className=\"info_input\" value={nam.age} onChange={inpt} name=\"age\" placeholder=\"Age\" />\r\n                        <div className=\"info_radio_wrap\">\r\n                            <div><input type=\"radio\" name=\"gender\" onChange={inpt} id=\"gender_male\" value=\"Male\" /><label htmlFor=\"gender_male\"> Male</label></div>\r\n                            <div><input type=\"radio\" name=\"gender\" onChange={inpt} id=\"gender_female\" value=\"Female\" /><label htmlFor=\"gender_female\"> Female</label></div>\r\n                            <div><input type=\"radio\" name=\"gender\" onChange={inpt} id=\"gender_others\" value=\"Others\" /><label htmlFor=\"gender_others\"> Others</label></div>\r\n                        </div>\r\n                        <button onClick={add} className=\"info_btn\"> {(status === 0) ? \"Add\" : \"Update\"} </button>\r\n                    </div>\r\n                </div>\r\n\r\n                {/* card component */}\r\n                <div className=\"card_wrap\">\r\n                    {info.map((k , index) => {\r\n                        \r\n                        return (\r\n                            <div key={index}>\r\n                                <div className=\"card\">\r\n                                    name : {k.name}&nbsp;|&nbsp;\r\n                                    age : {k.age}&nbsp;|&nbsp;\r\n                                    gender : {k.gender}\r\n                                    <button className=\"vtn\" onClick={ () => setInfo(a => a.filter(( ele , i ) => index!==i)) }>del</button>\r\n                                    <button className=\"vtn\" onClick={() => {\r\n                                        const b = info.filter((d , e) => index===e);\r\n                                        setNam({name:b[0].name , age:parseInt(b[0].age) , gender:b[0].gender});\r\n                                        setInd(index);\r\n                                        setStatus(1);\r\n                                    }}>edit</button>\r\n                                </div>\r\n                            </div>\r\n                        );\r\n                    })}\r\n                </div>\r\n\r\n            </div>\r\n        </>\r\n    )\r\n\r\n    \r\n}\r\n","import Info from \"./info/Info\";\n\nfunction App() {\n  return (\n    <>\n      <Info />\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}